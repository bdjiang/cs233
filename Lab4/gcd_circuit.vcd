$date
	Mon Sep 18 13:47:05 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module gcd_circuit_test $end
$var wire 32 ! out [31:0] $end
$var wire 1 " x_lt_y $end
$var wire 1 # x_ne_y $end
$var reg 32 $ X [31:0] $end
$var reg 32 % Y [31:0] $end
$var reg 1 & clock $end
$var reg 1 ' output_en $end
$var reg 1 ( reset $end
$var reg 1 ) x_en $end
$var reg 1 * x_sel $end
$var reg 1 + y_en $end
$var reg 1 , y_sel $end
$scope module circuit $end
$var wire 32 - X [31:0] $end
$var wire 32 . Y [31:0] $end
$var wire 1 / clock $end
$var wire 32 0 out [31:0] $end
$var wire 1 1 output_en $end
$var wire 1 2 reset $end
$var wire 32 3 subLoop1 [31:0] $end
$var wire 32 4 subLoop2 [31:0] $end
$var wire 32 5 xMuxtoReg [31:0] $end
$var wire 32 6 xRegOut [31:0] $end
$var wire 1 7 x_en $end
$var wire 1 " x_lt_y $end
$var wire 1 # x_ne_y $end
$var wire 1 8 x_sel $end
$var wire 32 9 yMuxtoReg [31:0] $end
$var wire 32 : yRegOut [31:0] $end
$var wire 1 ; y_en $end
$var wire 1 < y_sel $end
$scope module xMux $end
$var wire 32 = A [31:0] $end
$var wire 32 > B [31:0] $end
$var wire 32 ? out [31:0] $end
$var wire 1 8 sel $end
$var wire 32 @ temp1 [31:0] $end
$var wire 32 A temp2 [31:0] $end
$upscope $end
$scope module yMux $end
$var wire 32 B A [31:0] $end
$var wire 32 C B [31:0] $end
$var wire 32 D out [31:0] $end
$var wire 1 8 sel $end
$var wire 32 E temp1 [31:0] $end
$var wire 32 F temp2 [31:0] $end
$upscope $end
$scope module tmpX $end
$var wire 1 / clk $end
$var wire 32 G d [31:0] $end
$var wire 1 7 enable $end
$var wire 1 2 reset $end
$var reg 32 H q [31:0] $end
$upscope $end
$scope module tmpY $end
$var wire 1 / clk $end
$var wire 32 I d [31:0] $end
$var wire 1 ; enable $end
$var wire 1 2 reset $end
$var reg 32 J q [31:0] $end
$upscope $end
$scope module sub1 $end
$var wire 32 K A [31:0] $end
$var wire 32 L B [31:0] $end
$var wire 32 M out [31:0] $end
$upscope $end
$scope module sub2 $end
$var wire 32 N A [31:0] $end
$var wire 32 O B [31:0] $end
$var wire 32 P out [31:0] $end
$upscope $end
$scope module comp $end
$var wire 32 Q A [31:0] $end
$var wire 32 R B [31:0] $end
$var wire 1 " lt $end
$var wire 1 # ne $end
$upscope $end
$scope module outReg $end
$var wire 1 / clk $end
$var wire 32 S d [31:0] $end
$var wire 1 1 enable $end
$var wire 1 2 reset $end
$var reg 32 T q [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
0<
0;
b0 :
b0 9
08
07
b0 6
b0 5
b0 4
b0 3
12
01
b0 0
0/
b0 .
b0 -
0,
0+
0*
0)
1(
0'
0&
b0 %
b0 $
0#
0"
b0 !
$end
#1
0(
02
1&
1/
#2
0&
0/
#3
1&
1/
#4
0&
0/
#5
1&
1/
#6
b1110110 9
b1110110 D
b1110110 I
b101100010 5
b101100010 ?
b101100010 G
b1110110 E
b101100010 @
0&
0/
1+
1;
1)
17
b1110110 %
b1110110 .
b1110110 B
b101100010 $
b101100010 -
b101100010 =
#7
b1110110 J
b1110110 :
b1110110 L
b1110110 N
b1110110 R
b101100010 H
b11101100 3
b11101100 >
b11101100 M
b11111111111111111111111100010100 4
b11111111111111111111111100010100 C
b11111111111111111111111100010100 P
1#
b101100010 6
b101100010 K
b101100010 O
b101100010 Q
b101100010 S
1&
1/
#8
0&
0/
0+
0;
0)
07
#9
1&
1/
#10
0&
0/
1'
11
#11
b101100010 T
b101100010 !
b101100010 0
1&
1/
#12
0&
0/
0'
01
#13
1&
1/
#14
b11101100 5
b11101100 ?
b11101100 G
b11111111111111111111111100010100 9
b11111111111111111111111100010100 D
b11111111111111111111111100010100 I
b0 @
b11101100 A
b0 E
b11111111111111111111111100010100 F
0&
0/
1*
18
1)
17
#15
b1110110 5
b1110110 ?
b1110110 G
b11111111111111111111111110001010 9
b11111111111111111111111110001010 D
b11111111111111111111111110001010 I
b1110110 A
b11111111111111111111111110001010 F
b11101100 H
b1110110 3
b1110110 >
b1110110 M
b11111111111111111111111110001010 4
b11111111111111111111111110001010 C
b11111111111111111111111110001010 P
b11101100 6
b11101100 K
b11101100 O
b11101100 Q
b11101100 S
1&
1/
#16
b101100010 5
b101100010 ?
b101100010 G
b1110110 9
b1110110 D
b1110110 I
b101100010 @
b0 A
b1110110 E
b0 F
0&
0/
0*
08
0)
07
#17
1&
1/
#18
0&
0/
1'
11
#19
b11101100 T
b11101100 !
b11101100 0
1&
1/
#20
0&
0/
0'
01
#21
1&
1/
#22
0&
0/
#23
1&
1/
#24
0&
0/
